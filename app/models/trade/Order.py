from typing import Optional

from pydantic import BaseModel

from app.models.frameworks.FrameWork import FrameWork


class Order(BaseModel):
    # Self Defined Parameters
    trade_id: str = ""
    entry_frame_work: Optional[FrameWork] = None
    confirmations: Optional[list[FrameWork]] = None
    order_result_status: Optional[str] = None

    risk_percentage: Optional[float] = None
    money_at_risk: Optional[float] = None

    # Generated by Builder
    orderLinkId: Optional[str] = None

    # Required on Broker
    orderType: Optional[str] = None
    symbol: Optional[str] = None
    category: Optional[str] = None
    side: Optional[str] = None
    qty: Optional[str] = None  # must be defined in Risk Manager

    # Must be set after sending Request
    orderId: Optional[str] = None

    # Spot Logic
    isLeverage: Optional[int] = None
    marketUnit: Optional[str] = None
    orderIv: Optional[str] = None

    # Specific attributes (optional)
    stopLoss: Optional[str] = None
    takeProfit: Optional[str] = None
    price: Optional[str] = None
    timeInForce: Optional[str] = None
    closeOnTrigger: Optional[bool] = None
    reduceOnly: Optional[bool] = None

    # Conditional
    triggerPrice: Optional[str] = None
    triggerBy: Optional[str] = None
    tpTriggerBy: Optional[str] = None
    slTriggerBy: Optional[str] = None
    triggerDirection: Optional[int] = None

    # Limit Logic attributes (optional)
    tpslMode: Optional[str] = None
    tpLimitPrice: Optional[str] = None
    tpOrderType: Optional[str] = None
    slOrderType: Optional[str] = None
    slLimitPrice: Optional[str] = None

    # Response
    createdTime: Optional[str] = None
    updatedTime: Optional[str] = None
    lastPriceOnCreated: Optional[str] = None
    leavesQty: Optional[str] = None
    stopOrderType: Optional[str] = None
    orderStatus: Optional[str] = None
    leavesValue: Optional[str] = None
